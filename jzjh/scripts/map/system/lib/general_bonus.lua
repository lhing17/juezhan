---
--- 万能属性系统
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by G_Seinfeld.
--- DateTime: 2018/12/1 0001 15:12
---


--万能属性系统

--- @type unit
local unit = et.unit.__index

local bonus_abilities = {
    life = { 1497656368, 1497656369, 1497656370, 1497656371, 1497656372, 1497656373,
             1497656374, 1497656375, 1497656376, 1497656377, 1497656417, 1497656418,
             1497656419, 1497656420, 1497656421, 1497656422, },
    mana = { 1497656624, 1497656625, 1497656626, 1497656627, 1497656628, 1497656629,
             1497656630, 1497656631, 1497656632, 1497656633, 1497656673, 1497656674,
             1497656675, 1497656676, 1497656677, 1497656678, },
    armor = { 1497654064, 1497654065, 1497654066, 1497654067, 1497654068, 1497654069,
              1497654070, 1497654071, 1497654072, 1497654073, 1497654113, 1497654114,
              1497654115, },
    attack = { 1497653808, 1497653809, 1497653810, 1497653811, 1497653812, 1497653813,
               1497653814, 1497653815, 1497653816, 1497653817, 1497653857, 1497653858,
               1497653859, 1497653860, 1497653861, 1497653862, 1497653863, 1497653864,
               1497653865, 1497653866, 1497653867, 1497653868, 1497653869, 1497653870, }
}

local MAX_BONUS = {
    life = 65536,
    mana = 65536,
    armor = 4096,
    attack = 8388608,
}

--- @param type string 属性类别
function unit:clear_bonus(type)
    for i, v in ipairs(bonus_abilities[type]) do
        self:remove_ability(v)
    end
    self.bonus[type] = 0
end

function unit:set_max_state(type, value)
    if not is_in(type, { 'mana', 'life' }) then
        return false
    end
    if value > MAX_BONUS[type] or value <= 0 then
        return false
    end
    local v = value - self:get_max_life()
    if v == 0 then
        return false
    end
    self.bonus[type] = self.bonus[type] + v
    local level = v > 0 and 3 or 2
    v = math.abs(v)
    for i = #bonus_abilities[type] - 1, 0, -1 do
        if v >= 2 ^ i then
            self:add_ability(bonus_abilities[type][i + 1], level)
            self:remove_ability(bonus_abilities[type][i + 1])
        end
    end
    return true
end

function unit:set_bonus(type, value)
    if value == 0 then
        self:clear_bonus(type)
        return false
    end
    print(type, value)
    if value > MAX_BONUS[type] or value <= 0 then
        return false
    end
    if not is_in(type, table.keys(bonus_abilities)) then
        return false
    end
    self.bonus = self.bonus or {}
    self.bonus[type] = value
    if value < 0 then
        value = MAX_BONUS[type] + value + 1
        self:add_ability(bonus_abilities[type][#bonus_abilities[type]])
    else
        self:remove_ability(bonus_abilities[type][#bonus_abilities[type]])
    end
    for i = #bonus_abilities[type] - 2, 0, -1 do
        if value >= 2 ^ i then
            self:add_ability(bonus_abilities[i + 1])
            value = value - 2 ^ i
        else
            self:remove_ability(bonus_abilities[i + 1])
        end
    end
    return true
end

function unit:get_bonus(type)
    if self.bonus then
        return self.bonus[type] or 0
    end
    return 0

end

function unit:add_max_state(type, value)
    local state
    if type == 'life' then
        state = self:get_max_life()
    elseif type == 'mana' then
        state = self:get_max_mana()
    else
        return false
    end
    return self:set_max_state(type, value + state)
end

--- 万能属性系统
--- @param type string
function unit:add_bonus(type, value)
    return self:set_bonus(type, self:get_bonus(type) + value)
end


function YDWEGeneralBounsSystemUnitSetBonus(j_unit, bonus_type, mod, value)
    --- @type unit
    local u = et.unit(j_unit)
    local type
    if bonus_type == 0 then
        type = 'life'
    elseif bonus_type == 1 then
        type = 'mana'
    elseif bonus_type == 2 then
        type = 'armor'
    elseif bonus_type == 3 then
        type = 'attack'
    end

    if mod == 0 then
        u:add_bonus(type, value)
    elseif mod == 1 then
        u:add_bonus(type, -value)
    else
        u:set_bonus(type, value)
    end
end



