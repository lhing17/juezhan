---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by G_Seinfeld.
--- DateTime: 2018/11/8 10:39
---

local common_util = require 'jass.util.common_util'
local playerevent = require 'jass.type.playerevent'
local gameevent = require 'jass.type.gameevent'
local dialogevent = require 'jass.type.dialogevent'
local event = {}

--- @class j_event
local mt = {}
event.__index = mt

mt.type='event'

function event.create_player_event(p, pe)
    local e = setmetatable({}, event)
    e.handle_id = common_util.generate_handle_id()
    e.event_type = 'playerevent'
    e.event_id = pe
    e.player = p
    event[e.handle_id] = e
    return e
end

function event.create_player_chat_event(p, message, exact)
    local e = setmetatable({}, event)
    e.handle_id = common_util.generate_handle_id()
    e.event_type = 'playerevent'
    e.event_id = playerevent[16]
    e.player = p
    e.message = message
    e.exact = exact
    event[e.handle_id] = e
    return e
end

function event.create_dialog_event(d)
    local e = setmetatable({}, event)
    e.handle_id = common_util.generate_handle_id()
    e.event_type = 'dialogevent'
    e.event_id = dialogevent[91]
    e.dialog = d
    event[e.handle_id] = e
    return e
end

function event.create_dialog_button_event(b)
    local e = setmetatable({}, event)
    e.handle_id = common_util.generate_handle_id()
    e.event_type = 'dialogevent'
    e.event_id = dialogevent[90]
    e.button = b
    event[e.handle_id] = e
    return e
end

function event.create_player_unit_event(p, pue, filter)
    local e = setmetatable({}, event)
    e.handle_id = common_util.generate_handle_id()
    e.event_type = 'playerunitevent'
    e.event_id = pue
    e.player = p
    e.filter = filter
    event[e.handle_id] = e
    return e
end

function event.create_unit_event(u, ue, filter)
    local e = setmetatable({}, event)
    e.handle_id = common_util.generate_handle_id()
    e.event_type = 'unitevent'
    e.event_id = ue
    e.unit = u
    e.filter = filter
    event[e.handle_id] = e
    return e
end

function event.create_timer_expire_event(t)
    local e = setmetatable({}, event)
    e.handle_id = common_util.generate_handle_id()
    e.event_type = 'gameevent'
    e.event_id = gameevent[4]
    e.timer = t
    event[e.handle_id] = e
    return e
end

function event.create_game_state_event(state, opcode, value)
    local e = setmetatable({}, event)
    e.handle_id = common_util.generate_handle_id()
    e.event_type = 'gameevent'
    e.event_id = gameevent[3]
    e.state = state
    e.opcode = opcode
    e.value = value
    event[e.handle_id] = e
    return e
end

function event.create_enter_region_event(r, filter)
    local e = setmetatable({}, event)
    e.handle_id = common_util.generate_handle_id()
    e.event_type = 'gameevent'
    e.event_id = gameevent[5]
    e.region = r
    e.filter = filter
    event[e.handle_id] = e
    return e
end

function event.create_leave_region_event(r, filter)
    local e = setmetatable({}, event)
    e.handle_id = common_util.generate_handle_id()
    e.event_type = 'gameevent'
    e.event_id = gameevent[6]
    e.region = r
    e.filter = filter
    event[e.handle_id] = e
    return e
end

return event